{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Full-Stack Developer\\\\main-crud\\\\main-crud\\\\src\\\\Components\\\\EditAutor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Base from './Base';\nimport { AppCont } from './AppProvider';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditAuthor() {\n  _s();\n  const {\n    author,\n    setAuthor\n  } = AppCont();\n  const history = useHistory('');\n  const [authorName, setAuthorName] = useState('');\n  const [birthDate, setBirthDate] = useState('');\n  const [shortBio, setShortBio] = useState('');\n  const {\n    id\n  } = useParams();\n  // console.log(id)\n  useEffect(() => {\n    const selectedUser = author.find(author => author.id === id);\n    // console.log(selectedUser)\n    setAuthorName(selectedUser.authorName);\n    setBirthDate(selectedUser.birthDate);\n    setShortBio(selectedUser.shortBio);\n  }, [id, user]);\n  const updateUser = async () => {\n    const editedUser = {\n      authorName,\n      birthDate,\n      shortBio\n    };\n    try {\n      const response = await fetch(`https://655b477aab37729791a8d482.mockapi.io/crud/api/${id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(editedUser),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      console.log(data);\n      const getIndex = author.findIndex(stud => stud.id === id);\n      console.log(getIndex);\n      console.log(editedUser);\n      author[getIndex] = data;\n      setAuthor([...author]);\n      history.push('/');\n    } catch (error) {\n      console.log(\"data not found\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Base, {\n    tittle: \"Edit user\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adduser-style container\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Author Name\",\n        color: \"success\",\n        focused: true,\n        value: authorName,\n        onChange: event => setAuthorName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Birth Date\",\n        color: \"success\",\n        focused: true,\n        value: birthDate,\n        onChange: event => setBirthDate(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Short Bio\",\n        color: \"success\",\n        focused: true,\n        value: shortBio,\n        onChange: event => setShortBio(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: updateUser,\n        variant: \"contained\",\n        color: \"success\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAuthor, \"rt0oc9geozKMNL2Loe1vdxI6xoQ=\", false, function () {\n  return [useHistory, useParams];\n});\n_c = EditAuthor;\nexport default EditAuthor;\nvar _c;\n$RefreshReg$(_c, \"EditAuthor\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","Base","AppCont","TextField","Button","jsxDEV","_jsxDEV","EditAuthor","_s","author","setAuthor","history","authorName","setAuthorName","birthDate","setBirthDate","shortBio","setShortBio","id","selectedUser","find","user","updateUser","editedUser","response","fetch","method","body","JSON","stringify","headers","data","json","console","log","getIndex","findIndex","stud","push","error","tittle","children","className","label","color","focused","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Full-Stack Developer/main-crud/main-crud/src/Components/EditAutor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Base from './Base'\r\nimport { AppCont } from './AppProvider'\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction EditAuthor() {\r\n  const { author , setAuthor } = AppCont()\r\n  const history = useHistory('')\r\n  const [authorName, setAuthorName] = useState('')\r\n  const [birthDate, setBirthDate] = useState('')\r\n  const [shortBio, setShortBio] = useState('')\r\n\r\n  const { id } = useParams()\r\n  // console.log(id)\r\n  useEffect(() => {\r\n    const selectedUser = author.find((author) => author.id === id)\r\n    // console.log(selectedUser)\r\n    setAuthorName(selectedUser.authorName)\r\n    setBirthDate(selectedUser.birthDate)\r\n    setShortBio(selectedUser.shortBio)\r\n  }, [id,user])\r\n\r\n  const updateUser = async () => {\r\n    const editedUser = {\r\n    authorName,\r\n    birthDate,\r\n    shortBio,\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`https://655b477aab37729791a8d482.mockapi.io/crud/api/${id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(editedUser),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n      const data = await response.json()\r\n      console.log(data)\r\n      const getIndex = author.findIndex(stud => stud.id === id)\r\n      console.log(getIndex)\r\n      console.log(editedUser)\r\n      author[getIndex] = data\r\n      setAuthor([...author])\r\n      history.push('/')\r\n\r\n    } catch (error) {\r\n      console.log(\"data not found\")\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Base tittle=\"Edit user\">\r\n      <div className=\"adduser-style container\">\r\n        <TextField label=\"Author Name\" color=\"success\" focused\r\n          value={authorName}\r\n          onChange={(event) => setAuthorName(event.target.value)} />\r\n        <TextField label=\"Birth Date\" color=\"success\" focused\r\n          value={birthDate}\r\n          onChange={(event) => setBirthDate(event.target.value)} />\r\n        <TextField label=\"Short Bio\" color=\"success\" focused \r\n          value={shortBio}\r\n          onChange={(event) => setShortBio(event.target.value)} />\r\n        <Button onClick={updateUser} variant=\"contained\" color=\"success\">\r\n          Update\r\n        </Button>\r\n      </div>\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default EditAuthor"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}